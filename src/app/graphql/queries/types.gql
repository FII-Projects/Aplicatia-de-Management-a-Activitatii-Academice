# ----------========== Data Types ==========---------- #
scalar Date

# ----------========== Type ==========---------- #
interface GenericForm {
    id: Int
    type: Int
}

# ----------========== Type ==========---------- #

type GqlResponse {
    message: String
}

type Id {
    id: Int!
    identifier: String!
}

type User {
    id: Int
    identifier: String!
    email: String!
    admin: Boolean!
    activated: Boolean!
    updated: Date!
}

type AuthToken {
    token: String!
}

type Information implements GenericForm {
    id: Int!
    fullName: String!
    marriageName: String!
    thesisCoordinator: String!
    founding: String!
    completionDate: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type ScientificArticleISI implements GenericForm {
    id: Int!
    articleTitle: String!
    authors: String!
    publicationDate: String!
    volume: String!
    issue: String!
    startingPage: String!
    endingPage: String!
    impactFactor: String!
    cnatdcuClassification: String!
    doi: String!
    conferenceName: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type ISIProceeding implements GenericForm {
    id: Int!
    articleTitle: String!
    authors: String!
    conferenceName: String!
    indexedVolumeType: String!
    publicationYear: String!
    articleType: String!
    conferenceType: String!
    conferenceLink: String!
    startingPage: String!
    endingPage: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type ScientificArticleBDI implements GenericForm {
    id: Int!
    hierarchyDomains: String!
    articleTitle: String!
    authors: String!
    bdiIndexedMagazine: String!
    publicationYear: String!
    volume: String!
    number: String!
    startingPage: String!
    endingPage: String!
    internationalMagazine: String!
    cnatdcuClassification: String!
    indexedArticleLink: String!
    bdiDatabase: String!
    bdiDatabaseLink: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type ScientificBook implements GenericForm {
    id: Int!
    hierarchyDomains: String!
    chapterTitle: String!
    authors: String!
    bookTitle: String!
    pageNumber: String!
    publicationYear: String!
    publishingHouse: String!
    publicationType: String!
    isbn: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type Translation implements GenericForm {
    id: Int!
    hierarchyDomains: String!
    translationTitle: String!
    authors: String!
    translatedAuthors: String!
    publicationYear: String!
    publishingHouse: String!
    country: String!
    pageNumber: String!
    isbn: String!
    translationType: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type ScientificCommunication implements GenericForm {
    id: Int!
    authors: String!
    communicationType: String!
    presentationYear: String!
    scientificManifestationName: String!
    manifestationType: String!
    scientificManifestationLink: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type Patent implements GenericForm {
    id: Int!
    patentTitleOrCBI: String!
    authors: String!
    yearOfObtainingPatent: String!
    patentNumber: String!
    patentType: String!
    authority: String!
    country: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type ResearchContract implements GenericForm {
    id: Int!
    researchContractNameOrProject: String!
    projectCode: String!
    financier: String!
    function: String!
    startProjectPeriod: String!
    endProjectPeriod: String!
    contractType: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type Citation implements GenericForm {
    id: Int!
    articleTitle: String!
    authors: String!
    publicationTitleWhereReferenced: String!
    authorsNamesThatReference: String!
    citationYear: String!
    volume: String!
    impactFactor: String!
    issue: String!
    articleNumber: String!
    startingPage: String!
    endingPage: String!
    doi: String!
    cnatdcuClassification: String!
    citations: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type AwardAndNomination implements GenericForm {
    id: Int!
    yearOfAward: String!
    awardName: String!
    awardType: String!
    organizationThatGiveTheAward: String!
    country: String!
    awardedFor: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type AcademyMember implements GenericForm {
    id: Int!
    admissionYear: String!
    academyName: String!
    memberType: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type EditorialMember implements GenericForm {
    id: Int!
    committeeName: String!
    magazineName: String!
    yearOfCommitteeAttendance: String!
    quality: String!
    magazineType: String!
    nationalOrInternational: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type OrganizedEvent implements GenericForm {
    id: Int!
    manifestationName: String!
    startDate: String!
    endDate: String!
    manifestationPlace: String!
    manifestationType: String!
    manifestationClassification: String!
    manifestationLink: String!
    contactPerson: String!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type WithoutActivity implements GenericForm {
    id: Int!
    observations: String!
    owner: Int!
    updated: Date!
    type: Int!
}

type DidacticActivity implements GenericForm {
    id: Int!
    className: String!
    activityType: String!
    yearOfAttendingActivity: String!
    owner: Int!
    updated: Date!
    type: Int!
}

# ----------========== Input Types ==========---------- #

input IdInput {
    identifier: String!
}

input BaseUser {
    identifier: String!
    email: String!
}

input UserInput {
    id: Int!
    identifier: String!
    email: String!
    admin: Boolean
    activated: Boolean
}

input AuthTokenInput {
    token: String!
}

input InformationInput {
    fullName: String
    marriageName: String
    thesisCoordinator: String
    founding: String
    completionDate: String
    type: Int
}

input ScientificArticleISIInput {
    articleTitle: String
    authors: String
    publicationDate: String
    volume: String
    issue: String
    startingPage: String
    endingPage: String
    impactFactor: String
    cnatdcuClassification: String
    doi: String
    conferenceName: String
    observations: String
    type: Int
}

input ISIProceedingInput {
    articleTitle: String
    authors: String
    conferenceName: String
    indexedVolumeType: String
    publicationYear: String
    articleType: String
    conferenceType: String
    conferenceLink: String
    startingPage: String
    endingPage: String
    observations: String
    type: Int
}

input ScientificArticleBDIInput {
    hierarchyDomains: String
    articleTitle: String
    authors: String
    bdiIndexedMagazine: String
    publicationYear: String
    volume: String
    number: String
    startingPage: String
    endingPage: String
    internationalMagazine: String
    cnatdcuClassification: String
    indexedArticleLink: String
    bdiDatabase: String
    bdiDatabaseLink: String
    observations: String
    type: Int
}

input ScientificBookInput {
    hierarchyDomains: String
    chapterTitle: String
    authors: String
    bookTitle: String
    pageNumber: String
    publicationYear: String
    publishingHouse: String
    publicationType: String
    isbn: String
    observations: String
    type: Int
}

input TranslationInput {
    hierarchyDomains: String
    translationTitle: String
    authors: String
    translatedAuthors: String
    publicationYear: String
    publishingHouse: String
    country: String
    pageNumber: String
    isbn: String
    translationType: String
    observations: String
    type: Int
}

input ScientificCommunicationInput {
    authors: String
    communicationType: String
    presentationYear: String
    scientificManifestationName: String
    manifestationType: String
    scientificManifestationLink: String
    observations: String
    type: Int
}

input PatentInput {
    patentTitleOrCBI: String
    authors: String
    yearOfObtainingPatent: String
    patentNumber: String
    patentType: String
    authority: String
    country: String
    observations: String
    type: Int
}

input ResearchContractInput {
    researchContractNameOrProject: String
    projectCode: String
    financier: String
    function: String
    startProjectPeriod: String
    endProjectPeriod: String
    contractType: String
    observations: String
    type: Int
}

input CitationInput {
    articleTitle: String
    authors: String
    publicationTitleWhereReferenced: String
    authorsNamesThatReference: String
    citationYear: String
    volume: String
    impactFactor: String
    issue: String
    articleNumber: String
    startingPage: String
    endingPage: String
    doi: String
    cnatdcuClassification: String
    citations: String
    observations: String
    type: Int
}

input AwardAndNominationInput {
    yearOfAward: String
    awardName: String
    awardType: String
    organizationThatGiveTheAward: String
    country: String
    awardedFor: String
    observations: String
    type: Int
}

input AcademyMemberInput {
    admissionYear: String
    academyName: String
    memberType: String
    observations: String
    type: Int
}

input EditorialMemberInput {
    committeeName: String
    magazineName: String
    yearOfCommitteeAttendance: String
    quality: String
    magazineType: String
    nationalOrInternational: String
    observations: String
    type: Int
}

input OrganizedEventInput {
    manifestationName: String
    startDate: String
    endDate: String
    manifestationPlace: String
    manifestationType: String
    manifestationClassification: String
    manifestationLink: String
    contactPerson: String
    observations: String
    type: Int
}

input WithoutActivityInput {
    observations: String
    type: Int
}

input DidacticActivityInput {
    className: String
    activityType: String
    yearOfAttendingActivity: String
    type: Int
}